#include<stdio.h>
#include<stdlib.h>

struct Account
{
	char name[100];
	char idCard[19];
	char tel[12];
	char username[100];
	char password[7];
	float money;
	
	struct Account *next;
};
typedef struct Account Account;

Account * head=NULL;//指向头结点的指针
Account * tail=NULL;//指向尾结点的指针


void signUpC()
{
	//申请一块堆内存空间，将其地址赋值给指针newNodeP
	Account * newNodeP=(Account *)malloc(sizeof(Account));
	
	printf("请输入姓名:\n");
	scanf("%s",newNodeP->name);
	
	printf("请输入身份证:\n");
	scanf("%s",newNodeP->idCard);
	
	printf("请输入电话:\n");
	scanf("%s",newNodeP->tel);
	
	printf("请输入账号:\n");
	scanf("%s",newNodeP->username);
	
	printf("请输入密码:\n");
	scanf("%s",newNodeP->password);
	
	newNodeP->money=0.0f;
	newNodeP->next=NULL;
	
	if(head==NULL)
	{
		head=newNodeP;
		tail=newNodeP;
	}
	else
	{
		tail->next=newNodeP;
		tail=newNodeP;
	}
	
	printf("创建成功!\n");
	
}
void signUpE()
{
	//申请一块堆内存空间，将其地址赋值给指针newNodeP
	Account * newNodeP=(Account *)malloc(sizeof(Account));
	
	printf("Please enter your name:\n");
	scanf("%s",newNodeP->name);
	
	printf("Please enter your idCard:\n");
	scanf("%s",newNodeP->idCard);
	
	printf("Please enter your tel:\n");
	scanf("%s",newNodeP->tel);
	
	printf("Please enter your username:\n");
	scanf("%s",newNodeP->username);
	
	printf("Please enter your password:\n");
	scanf("%s",newNodeP->password);
	
	newNodeP->money=0.0f;
	newNodeP->next=NULL;
	
	if(head==NULL)
	{
		head=newNodeP;
		tail=newNodeP;
	}
	else
	{
		tail->next=newNodeP;
		tail=newNodeP;
	}
	
	printf("Created successfully!\n");
	
}

void signInE()
{
	Account * newNodeP=(Account *)malloc(sizeof(Account));
	printf("Please enter your username:\n");
	scanf("%s",newNodeP->username);
	
	printf("Please enter your password:\n");
	scanf("%s",newNodeP->password);
	if(head==NULL)
	{
		head=newNodeP;
		tail=newNodeP;
	}
	else
	{
		tail->next=newNodeP;
		tail=newNodeP;
	}
	
}
void signInC()
{
	Account * newNodeP=(Account *)malloc(sizeof(Account));
	printf("请输入账号:\n");
	scanf("%s",newNodeP->username);
	
	printf("请输入密码:\n");
	scanf("%s",newNodeP->password);
	if(head==NULL)
	{
		head=newNodeP;
		tail=newNodeP;
	}
	else
	{
		tail->next=newNodeP;
		tail=newNodeP;
	}
	
}

void showMenuC()
{
	printf("开户，按1\n");
	printf("登录，按2\n");
	int n;
	scanf("%d",&n);
	
	if(n==1)
	{
		signUpC();
	}
	else if(n==2)
	{
		signInC();
	}
}
void showMenuE()
{
	printf("signUp，input 1\n");
	printf("signIn，input 2\n");
	int n;
	scanf("%d",&n);
	
	if(n==1)
	{
		signUpE();
	}
	else if(n==2)
	{
		signInE();
	}
}


void loadDataC()
{
	FILE* fp=fopen("D:/atm.txt","r");
	if(fp!=NULL)
	{
		while(!feof(fp))
		{
			//创建结点
			Account * newNode=(Account *)malloc(sizeof(Account));
			
			//结点初始化
			newNode->next=NULL;
			fscanf(fp,"%s %s\n",newNode->username,newNode->password);
			
			//添加结点到链表
			if(head==NULL)
			{
				head=newNode;
				tail=newNode;
			}
			else
			{
				tail->next=newNode;
				tail=newNode;
			}
		}
		printf("加载成功！\n");
		fclose(fp);
	}
}

void loadDataE()
{
	FILE* fp=fopen("D:/atm.txt","r");
	if(fp!=NULL)
	{
		while(!feof(fp))
		{
			//创建结点
			Account * newNode=(Account *)malloc(sizeof(Account));
			
			//结点初始化
			newNode->next=NULL;
			fscanf(fp,"%s %s\n",newNode->username,newNode->password);
			
			//添加结点到链表
			if(head==NULL)
			{
				head=newNode;
				tail=newNode;
			}
			else
			{
				tail->next=newNode;
				tail=newNode;
			}
		}
		printf("Loading successful！\n");
		fclose(fp);
	}
}


void printLinkedList()
{
	Account * curP=head;
	while(curP!=NULL)
	{
		printf("%s\t%s\n",curP->username,curP->password);
		curP=curP->next;
	}
	
}

void saveData()
{
	FILE* fp=fopen("D:/atm.txt","w");
	if(fp!=NULL)
	{
		Account * curP=head;
		while(curP!=NULL)
		{
			fprintf(fp,"%s %s\n",curP->username,curP->password);
			curP=curP->next;
		}
	}
}


int main()
{
	printf("欢迎使用XXX银行\n");
	printf("Welcome to XXX bank\n");
	
	int language;
	printf("中文，按1\n");
	printf("English, input 2\n");
	scanf("%d",&language);
	if(language==1)
	{
		showMenuC();
		loadDataC();	
		printLinkedList();
		saveData();
	}
	else if(language==2)
	{
		showMenuE();
		loadDataE();	
		printLinkedList();	
		saveData();
	}
	return 0;
}








